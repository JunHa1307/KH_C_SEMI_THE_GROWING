<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<entry key="selectAlbumList">
		SELECT BOARD_NO, BOARD_TITLE, TO_CHAR(CREATE_DATE, 'YY.MM.DD') AS C_DATE, FILE_PATH || CHANGE_NAME AS TITLEIMG
		FROM BOARD B
		JOIN ATTACHMENT ON(BOARD_NO = REF_BNO)
		WHERE BOARD_TYPE = 3 
		AND B.REF_CNO=?
		AND B.STATUS = 'Y'
		AND FILE_LEVEL = 1
		ORDER BY CREATE_DATE DESC
	</entry>

	<entry key="insertAlbumBoard">
		INSERT INTO BOARD(BOARD_NO, BOARD_TYPE, BOARD_TITLE, BOARD_CONTENT, REF_UNO, REF_CNO )
		VALUES (SEQ_BNO.NEXTVAL, ?, ? ,? ,?,?)
	</entry>


	<entry key="insertAttachmentList">
		INSERT INTO ATTACHMENT(FILE_NO, REF_BNO, ORIGIN_NAME, CHANGE_NAME, FILE_PATH, FILE_LEVEL)
		VALUES (SEQ_ANO.NEXTVAL, SEQ_BNO.CURRVAL, ?,?,?,?)
	</entry>

	<entry key="selectAttachList">
		SELECT FILE_NO, ORIGIN_NAME, CHANGE_NAME, FILE_PATH
		FROM ATTACHMENT
		JOIN BOARD B ON (BOARD_NO = REF_BNO)
		WHERE B.REF_CNO = ?
		ORDER BY UPLOAD_DATE DESC
	</entry>


	
	<entry key="selectBoardList">
		SELECT * 	
		FROM(
				SELECT ROWNUM RNUM , A.*
				FROM (
					SELECT
					       BOARD_NO,
					       USER_ID,
					       BOARD_TITLE,
					       CREATE_DATE,
					       REF_CNO,
					       BOARD_COUNT
					FROM BOARD B
					JOIN MEMBER ON (REF_UNO = USER_NO)
					WHERE BOARD_TYPE = ?
					  AND B.STATUS = 'Y'
					  AND B.REF_CNO = ?
					ORDER BY BOARD_NO DESC
				) A
			)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="selectBoardList2">
		SELECT * 	
		FROM(
				SELECT ROWNUM RNUM , A.*
				FROM (
					SELECT
					       BOARD_NO,
					       USER_ID,
					       BOARD_TITLE,
					       CREATE_DATE,
					       REF_CNO,
					       BOARD_COUNT
					FROM BOARD B
					JOIN MEMBER ON (REF_UNO = USER_NO)
					WHERE BOARD_TYPE = ?
					  AND B.STATUS = 'Y'
					  AND B.REF_CNO = ?
					  AND B.BOARD_TITLE LIKE ?
					ORDER BY BOARD_NO DESC
				) A
			)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="increaseCount">
		UPDATE BOARD
		SET BOARD_COUNT = BOARD_COUNT +1
		WHERE BOARD_NO = ? 
		  AND STATUS = 'Y'
	</entry>
	
	<entry key="selectBoard">
		SELECT 
			BOARD_NO,
			BOARD_TYPE,
			BOARD_TITLE,
			USER_ID,
			USER_NO,
			TO_CHAR(CREATE_DATE, 'MM.DD HH:MI') AS C_DATE,
			BOARD_CONTENT,
			REF_CNO
		FROM BOARD B
		JOIN MEMBER ON (REF_UNO = USER_NO)
		WHERE BOARD_NO = ?
		  AND B.STATUS = 'Y'
	</entry>
	
	<entry key="updateBoard">
		UPDATE BOARD
		SET 
			BOARD_TITLE = ?,
			BOARD_CONTENT =?
		WHERE BOARD_NO = ?
	</entry>
	
	<entry key="insertReply">
		INSERT INTO REPLY(REPLY_NO, REPLY_CONTENT, REF_BNO, REPLY_WRITER,REPLY_SECRET)
		VALUES (SEQ_RNO.NEXTVAL, ?, ?, ?,?)
	</entry>
	
	<entry key="selectReplyList">
	     SELECT REPLY_NO,  REPLY_CONTENT, USER_ID, TO_CHAR(CREATE_DATE, 'MM.DD HH24:MI:SS') AS CREATE_DATE, FILE_PATH, CHANGE_NAME, REPLY_SECRET
        FROM REPLY R
        JOIN MEMBER ON(REPLY_WRITER = USER_NO)
        LEFT JOIN ATTACHMENT ON(REF_UNO = USER_NO)
        WHERE R.REF_BNO = ?
        AND R.STATUS = 'Y' 
        ORDER BY CREATE_DATE DESC
	</entry>
	
	<entry key="selectAlbumInnerList">
	SELECT FILE_NO, CHANGE_NAME, FILE_PATH, FILE_LEVEL
		FROM ATTACHMENT
		WHERE REF_BNO = ?
		ORDER BY FILE_LEVEL
	</entry>
	
	<entry key="selectAlbumBoard">
	  SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT, USER_ID, TO_CHAR(CREATE_DATE, 'MM.DD HH24:MI') AS C_DATE, FILE_PATH, CHANGE_NAME, B.REF_UNO
        FROM BOARD B 
        JOIN MEMBER M ON (M.USER_NO = B.REF_UNO)
        LEFT JOIN ATTACHMENT A ON (M.USER_NO = A.REF_UNO)
        WHERE BOARD_NO = ? AND BOARD_TYPE=3
	
	
	</entry>
	
	<entry key="updateBoard">
		UPDATE BOARD
		SET BOARD_TITLE = ?,
		BOARD_CONTENT = ?
		WHERE BOARD_NO = ? 
	</entry>
	
	<entry key="updateAttachment">
		UPDATE ATTACHMENT
		SET ORIGIN_NAME = ?,
			CHANGE_NAME = ?, 
			FILE_PATH   = ?,
			FILE_LEVEL =?
			UPLOAD_DATE = SYSDATE
		WHERE FILE_NO = ?
		
	</entry>
	
	<entry key="reInsertAttachment">
		INSERT INTO ATTACHMENT(FILE_NO, REF_BNO, ORIGIN_NAME, CHANGE_NAME, FILE_PATH, FILE_LEVEL)
		VALUES(SEQ_ANO.NEXTVAL, ?, ?,?,?,?)	

	</entry>
	
		<entry key="deleteAttachment">
		DELETE FROM ATTACHMENT
		WHERE REF_BNO = ? AND FILE_LEVEL =?
		
	</entry>

	<entry key="selectLike">
		SELECT REF_BNO, REF_UNO
		FROM LIKESS 
		WHERE REF_BNO= ? AND REF_UNO =?
	</entry>
	
	<entry key="insertLike">
		INSERT INTO LIKESS(REF_BNO, REF_UNO) VALUES(?, ?)
	</entry>
	
	<entry key="deleteLike">
		DELETE FROM LIKESS WHERE REF_BNO= ? AND REF_UNO =?
	</entry>
	
	<entry key="selectLikeCount">
	SELECT COUNT(REF_BNO) AS LIKES
	FROM LIKESS
	JOIN BOARD ON (REF_BNO = BOARD_NO)
	WHERE REF_BNO = ?
	
	</entry>
	
	
	<entry key="selectListCount">
		SELECT COUNT(*) AS COUNT
		FROM BOARD
		WHERE STATUS = 'Y' AND REF_CNO =? AND BOARD_TYPE IN (2,3,4)
			
	</entry>
		<entry key="selectBoardListCount">
		SELECT COUNT(*) AS COUNT
		FROM BOARD
		WHERE STATUS = 'Y' AND REF_CNO =?   AND BOARD_TYPE = ?
			
	</entry>
	<entry key="selectList">
	SELECT * 	
	FROM(
			SELECT ROWNUM RNUM, A.*
			FROM(
				SELECT
					BOARD_NO,
					BOARD_TYPE,
					BOARD_TITLE,
					USER_ID,
					CREATE_DATE
				FROM  BOARD B 
				JOIN MEMBER ON (REF_UNO = USER_NO)
				WHERE B.STATUS = 'Y' AND REF_CNO = ? AND BOARD_TYPE IN (2,3,4)
				ORDER BY CREATE_DATE DESC
			) A
		)
	WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="insertBoard">
		INSERT INTO BOARD(BOARD_NO, BOARD_TYPE, BOARD_TITLE, BOARD_CONTENT, REF_UNO, REF_CNO )
		VALUES (SEQ_BNO.NEXTVAL, ?, ? ,? ,?,?)
	</entry>
	
		<entry key="deleteBoard">
		UPDATE BOARD
		SET STATUS = 'N'
		WHERE BOARD_NO = ?
		AND REF_UNO = ?
	</entry>
	
	<entry key="deleteReply">
		UPDATE Reply
		SET STATUS = 'N'
		WHERE REPLY_NO = ?
		
		</entry>

	<entry key="insertNotice">
		INSERT INTO BOARD(BOARD_NO, BOARD_TYPE, REF_UNO, BOARD_TITLE, BOARD_CONTENT, REF_CNO)
				VALUES (SEQ_BNO.NEXTVAL, ?, ?, ?, ?, ?)
	</entry>
	
	<entry key="selectNoticeList">
		SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT, CREATE_DATE
		FROM BOARD 
		WHERE BOARD_TYPE = 2
		AND REF_CNO = ?
		AND STATUS = 'Y'
		ORDER BY CREATE_DATE DESC
	</entry>
	
	<entry key="selectNotice">
	  SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT, USER_ID, CREATE_DATE
        FROM BOARD B
        JOIN MEMBER M ON (M.USER_NO = B.REF_UNO)
        WHERE BOARD_NO = ? 
        AND BOARD_TYPE = 2
	</entry>
	
	<entry key="updateNotice">
		UPDATE BOARD
		SET BOARD_TITLE = ?,
			BOARD_CONTENT = ?
		WHERE BOARD_NO = ? 
	</entry>

	<entry key="deleteNotice">
		UPDATE BOARD
		SET STATUS = 'N'
		WHERE BOARD_NO = ?
	</entry>
	
	
		<entry key="selectReply">
	 SELECT REPLY_CONTENT, REPLY_NO , REPLY_SECRET
	 FROM REPLY 
	   WHERE REPLY_NO = ?
	</entry>
	
		<entry key="selectCountReply">
	SELECT COUNT(*) AS R_COUNT
        FROM REPLY
    WHERE REF_BNO=? AND
         STATUS = 'Y' 
	</entry>

	<entry key="insertNoticeCheck">
		INSERT INTO NOTICE_CHECK(REF_UNO, REF_CNO, REF_BNO, USER_NAME, USER_LEVEL)
				VALUES (?, ?, ?, ?, ?)
	</entry>

	<entry key="selectUserName">
		SELECT USER_NAME, REF_UNO
		FROM NOTICE_CHECK
		WHERE REF_CNO = ?
		AND REF_BNO = ?
	</entry>

	<entry key="twoNoCheck">
		SELECT COUNT(*)
		FROM NOTICE_CHECK
		WHERE REF_UNO = ?
		AND REF_CNO = ?
	</entry>

	<entry key="threeNoCheck">
		SELECT *
		FROM NOTICE_CHECK
		WHERE REF_UNO = ?
		AND REF_CNO = ?
		AND REF_BNO = ?
	</entry>


	<entry key="selectScrap">
		SELECT REF_BNO, REF_UNO
		FROM SCRAP 
		WHERE REF_BNO= ? 
		AND REF_UNO =?
	</entry>

	<entry key="insertScrap">
		INSERT INTO SCRAP(REF_BNO, REF_UNO) 
		VALUES(?, ?)
	</entry>

	<entry key="deleteScrap">
		DELETE FROM SCRAP 
		WHERE REF_BNO= ? 
		AND REF_UNO =?
	</entry>

	<entry key="selectScrapList">
		SELECT S.REF_BNO, S.REF_UNO
		FROM SCRAP S
		JOIN BOARD B ON (B.BOARD_NO = S.REF_BNO)
		WHERE S.REF_UNO = ?
		
	</entry>

	<entry key="selectScrapForMy">
		SELECT S.REF_BNO, S.REF_UNO
		FROM SCRAP S
		JOIN BOARD B ON (B.BOARD_NO = S.REF_BNO)
		WHERE S.REF_UNO = ?
		AND S.REF_BNO = ?
	</entry>
	
	<entry key="selectMyScrapList">
		SELECT S.REF_BNO
		FROM SCRAP S
		JOIN BOARD B ON (B.BOARD_NO = S.REF_BNO)
		WHERE S.REF_UNO = ?
		ORDER BY S.REF_BNO DESC
		
	</entry>


	<entry key="insertReplyNotice">
		INSERT INTO MEMBER_NOTICE
		(REF_UNO, REF_CNO, INTERACTION_NO, REF_BNO, NOTICE_DATE, NOTICE_TYPE)
		VALUES (?, ?, ?, ?, SYSDATE, 2)
	</entry>
	
	<entry key="insertBoardNotice">
		INSERT INTO MEMBER_NOTICE
			(REF_UNO , REF_CNO, INTERACTION_NO, REF_BNO, NOTICE_DATE, NOTICE_TYPE)
			VALUES ((SELECT REF_UNO FROM (SELECT ROWNUM R, REF_UNO FROM CLASS_MEMBER JOIN CLASS ON (CLASS_NO = REF_CNO) WHERE CLASS_CODE = ? ORDER BY R ASC) WHERE R = ?),
					(SELECT DISTINCT CLASS_NO FROM CLASS JOIN CLASS_MEMBER ON (CLASS_NO = REF_CNO) WHERE CLASS_CODE = ?),
					?, SEQ_BNO.CURRVAL, SYSDATE, 3)
	</entry>

</properties>